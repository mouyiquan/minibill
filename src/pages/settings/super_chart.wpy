<template>
  <view class="container">
    <view class="time-filter">
      <view class="month-filter">
        <!-- <view>2019 年 01 月</view> -->
        <view class="iconfont jz-icon-arrow-left" @tap="setParams('prev')"></view>
        <view class="month">{{ year }} 年 {{ month }} 月</view>
        <view class="iconfont jz-icon-arrow-right-copy" @tap="setParams('next')"></view>
      </view>
    </view>

    <view class="chart-container">
      <view class="title">当月资产状况</view>
      <view class="chart-amount">
        <view>
          <view class="amount">{{ header.expend_count }}</view>
          <view class="small-text">总支出</view>
          <view class="percent-rise {{ header.expend_rise }}">同期{{ header.expend_rise == 'income' ? '增长' : '下降' }} {{ header.expend_percent }}%</view>
        </view>

        <view>
          <view class="amount">{{ header.income_count }}</view>
          <view class="small-text">总收入</view>
          <view class="percent-rise {{ header.income_rise }}">同期{{ header.income_rise == 'income' ? '增长' : '下降' }} {{ header.income_percent }}%</view>
        </view>

        <view>
          <view class="amount">{{ header.surplus }}</view>
          <view class="small-text">结余</view>
          <view class="percent-rise {{ header.surplus_rise }}">同期{{ header.surplus_rise == 'income' ? '增长' : '下降' }} {{ header.surplus_percent }}%</view>
        </view>
      </view>
    </view>
    
    <view class="chart-container">
      <view class="title">分类消费</view>
      <canvas canvas-id="pieCanvas" disable-scroll="true" style="width: 100%; height: 300px;"></canvas>
    </view>

    <view class="chart-container">
      <view class="title">周消费曲线</view>
      <canvas canvas-id="weekExpendCanvas" disable-scroll="true" style="width: 100%; height: 210px;"></canvas>
    </view>

    <view class="chart-container">
      <view class="title">近 6 月支出趋势</view>
      <canvas canvas-id="expendLineCanvas" disable-scroll="true" style="width: 100%; height: 300px;"></canvas>
    </view>

    <view class="chart-container">
      <view class="title">近 6 月收入趋势</view>
      <canvas canvas-id="incomeLineCanvas" disable-scroll="true" style="width: 100%; height: 300px;"></canvas>
    </view>

    <view class="chart-container">
      <view class="title">近 6 月结余趋势</view>
      <canvas canvas-id="surplusLineCanvas" disable-scroll="true" style="width: 100%; height: 300px;"></canvas>
    </view>

    <view class="chart-container">
      <view class="title">当月消费分类排行</view>
      <view class="expend-bars" wx:if="{{ categories.length > 0 }}">
        <view class="item" wx:for="{{ categories }}" style="background-size: {{ item.percent }}% 100%;" @tap="redirectTo('{{ item.category_id }}')">
          <view>
            <view class="title">{{ item.name }}<text class="percent">{{ item.percent }}%</text></view>
            <view class="amount">{{ item.format_amount }}</view>
          </view>
          <view class="zan-icon zan-icon-arrow"></view>
        </view>
      </view>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import wxRequest from '@/utils/wxRequest'
  import wxCharts from '@/utils/wxchart.min.js'
  import Empty from '@/components/empty'
  
  export default class superChart extends wepy.page {
    config = {
      navigationBarTitleText: '消费报表'
    }

    data = {
      chartData: [],
      header: {},
      info: {},
      year: new Date().getFullYear(),
      month: new Date().getMonth() + 1,
      categories: [],
      emptyTitle: '找不到数据呢~试试其它',
      showFilter: false
    }

    components = {
      empty: Empty
		}

    methods = {
      setParams (type) {
        type == 'next' ? this.nextMonth() : this.prevMonth()
        this.initChart()
      },
      redirectTo (category_id) {
        wepy.navigateTo({
          url: `/pages/statements/filter_statements?year=${this.year}&month=${this.month}&category_id=${category_id}`
        })
      }
    }

    async onShow() {
      this.info = await wepy.getSystemInfo()
      this.initChart()
    }

    initChart () {
      this.getHeader()
      this.getWeekChartData()
      this.getPieData()
      this.getLineChartData()
      this.getCategoriesData()
    }

    nextMonth () {
      if (this.month == 12) {
        this.year += 1
        this.month = 1
      } else {
        this.month += 1
      }
    }

    prevMonth () {
      if (this.month == 1) {
        this.year -= 1
        this.month = 12
      } else {
        this.month -= 1
      }
    }

    async getHeader () {
      const data = await wxRequest.Get('super_chart/header', {
        year: this.year,
        month: this.month
      })
      this.header = data.data
      this.$apply()
    }

    async getWeekChartData () {
      const data = await wxRequest.Get('super_chart/week_data',{
        year: this.year,
        month: this.month
      })
      if (data.weeks.length > 0) {
        new wxCharts({
          canvasId: 'weekExpendCanvas',
          type: 'line',
          categories: data.weeks,
          series: [{
            name: '每周消费',
            data: data.data,
          }],
          yAxis: {
            title: '消费金额 (元)',
            min: 0
          },
          extra: {
            lineStyle: 'curve'
          },
          width: 320,
          height: 200
        });
      }
    }

    async getPieData () {
      const data = await wxRequest.Get('super_chart/get_pie_data', {
        year: this.year,
        month: this.month
      })
      if (data.data.length > 0) this.initPieChart(data.data)
      this.$apply()
    }

    async getLineChartData () {
      const data = await wxRequest.Get('super_chart/line_chart', {year: this.year})
      try {
        if(data.months.length > 0) {
          this.initLineChart(data)
        }
      } catch (e) {
        console.log(e)
      }
    }

    async getCategoriesData () {
      const data = await wxRequest.Get('super_chart/categories_list', {year: this.year, month: this.month})
      this.categories = data.data
      this.$apply()
    }

    async initPieChart (data) {
      new wxCharts({
        canvasId: 'pieCanvas',
        type: 'pie',
        series: data,
        width: this.info.screenWidth,
        height: 280,
        legend: true,
        dataLabel: true
      });
    }

    async initLineChart (data) {
      new wxCharts({
        canvasId: 'expendLineCanvas',
        type: 'line',
        categories: data.months,
        series: [{
            name: '支出',
            data:  data.expends,
            color: '#008000'
        }],
        yAxis: {
            title: '金额',
            min: 0
        },
        extra: {
          lineStyle: 'curve'
        },
        width: this.info.screenWidth,
        height: 280
      });

      new wxCharts({
        canvasId: 'incomeLineCanvas',
        type: 'line',
        categories: data.months,
        series: [{
            name: '收入',
            data: data.incomes,
            color: '#FF0000'
        }],
        yAxis: {
            title: '金额',
            min: 0
        },
        extra: {
          lineStyle: 'curve'
        },
        width: this.info.screenWidth,
        height: 280
      });

      new wxCharts({
        canvasId: 'surplusLineCanvas',
        type: 'line',
        categories: data.months,
        series: [{
          name: '结余',
          data:  data.surplus,
          color: '#cccccc'
        }],
        yAxis: {
            title: '金额',
            min: 0
        },
        extra: {
          lineStyle: 'curve'
        },
        width: this.info.screenWidth,
        height: 280
      });
    }

    toggleFilter () {
      this.showFilter = !this.showFilter
    }
  }
</script>
<style lang="scss" src="@/public/styles/super_chart.scss"></style>
