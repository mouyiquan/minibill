<template>
  <view class="container">
    <view class="block user-information" style="height: {{info.screenHeight - 105}}px;background: url('{{ userinfo.cover }}')">
      <view class="user-avatar"><image src="{{ userinfo.avatar_url }}"></image></view>
      <view class="user-name">Hi, {{ userinfo.name }}</view>
      <view class="statement-title">别来无恙啊</view>
      <view class="statement-title" wx:if="{{ userinfo.begin_text && userinfo.begin_text != ''}}">{{ userinfo.begin_text }}</view>
      <view class="statement-title">为您送上 {{ userinfo.month }} 消费统计</view>
    </view>

    <view class="block">
      <view class="title">收支结余统计</view>
      <view wx:if="{{ dashboard.data != null }}">
        <view style="width: 100%;height: 300px;">
          <canvas canvas-id="monthChart" disable-scroll="true" class="monthChart" style="width: 100%; height: 280px;"></canvas>
        </view>

        <view class="column-process">
          <view>
            <text class="title">收入</text>
            <view class="row">
              <view class="cle" style="width: {{incomePercent}}"></view>
            </view>
            <view class="money">{{ dashboard.income }}</view>
          </view>

          <view>
            <text class="title">支出</text>
            <view class="row">
              <view class="cle" style="width: {{expendPercent}}"></view>
            </view>
            <view class="money">{{ dashboard.expend }}</view>
          </view>

          <view>
            <text class="title">结余</text>
            <view class="row">
              <view class="cle" style="width: {{surplusPercent}}"></view>
            </view>
            <view class="money">{{ dashboard.surplus }}</view>
          </view>
        </view>
      </view>
      <view wx:else>
        <Empty :title.sync="emptyTitle"></Empty>
      </view>
    </view>

    <view class="block">
      <view class="title">消费对比</view>
      <view wx:if="{{ expendChart.categories.length > 0 }}">
        <canvas canvas-id="expendChart" disable-scroll="true" class="expendChart" style="width: 100%; height: 200px;"></canvas>
      </view>
      <view wx:else>
        <Empty :title.sync="emptyTitle"></Empty>
      </view>
    </view>

    <view class="block">
      <view class="title">日均消费</view>
      <view wx:if="{{ dayChart.months.length > 0 }}">
        <canvas canvas-id="dayAvgChart" disable-scroll="true" style="width: 100%; height: 200px;"></canvas>
      </view>
      <view wx:else>
        <Empty :title.sync="emptyTitle"></Empty>
      </view>
    </view>

    <view class="block">
      <view class="title">周消费曲线</view>
      <view wx:if="{{ weekChart.weeks.length > 0 }}">
        <canvas canvas-id="weekChart" disable-scroll="true" style="width: 100%; height: 200px;"></canvas>
      </view>
      <view wx:else>
        <Empty :title.sync="emptyTitle"></Empty>
      </view>
    </view>

    <view class="block">
      <view class="title">月结余曲线</view>
      <view wx:if="{{ surplusChart.months.length > 0 }}">
        <canvas canvas-id="surplusChart" disable-scroll="true" style="width: 100%; height: 200px;"></canvas>
      </view>
      <view wx:else>
        <Empty :title.sync="emptyTitle"></Empty>
      </view>
    </view>

    <view class="block">
      <view class="title">预算使用情况</view>
      <view wx:if="{{ budgetChart.categories.length > 0 }}">
        <canvas canvas-id="budgetChart" disable-scroll="true" style="width: 100%; height: 200px;"></canvas>
      </view>
      <view wx:else>
        <Empty :title.sync="emptyTitle"></Empty>
      </view>
    </view>


    <view class="block">
      <view class="title">消费排行前十</view>
      <view wx:if="{{ lastTen.length > 0 }}">
        <repeat for="{{ lastTen }}" key="index" index="index" item="item">
          <StatementItem :statement.sync="item"></StatementItem>
        </repeat>
      </view>
      <view wx:else>
        <Empty :title.sync="emptyTitle"></Empty>
      </view>
    </view>

    <view class="block">
      <view class="title">资产汇总</view>
      <view wx:if="{{ totalAsset.data != null }}">
        <view>
          <canvas canvas-id="assetAllChart" disable-scroll="true" style="width: 100%; height: 280px;"></canvas>
        </view>
        <view class="column-process">
          <view>
            <text class="title">总资产</text>
            <view class="row">
              <view class="cle" style="width: {{assetPercent}}"></view>
            </view>
            <view class="money">{{ totalAsset.all_asset }}</view>
          </view>

          <view>
            <text class="title">净资产</text>
            <view class="row">
              <view class="cle" style="width: {{netPercent}}"></view>
            </view>
            <view class="money">{{ totalAsset.net_worth }}</view>
          </view>

          <view>
            <text class="title">总负债</text>
            <view class="row">
              <view class="cle" style="width: {{debtPercent}}"></view>
            </view>
            <view class="money">{{ totalAsset.total_liability }}</view>
          </view>
        </view>
      </view>
      <view wx:else>
        <Empty :title.sync="emptyTitle"></Empty>
      </view>
    </view>
    
    <view class="block">
      <view class="title">寄语</view>
      <view class="ending">
        {{ userinfo.end_text }}
      </view>
    </view>

  </view>
</template>

<script>
  import wepy from 'wepy'
  import wxRequest from '@/utils/wxRequest'
  import wxCharts from '@/utils/wxchart.min.js'
  import StatementItem from '@/components/index/statement'
  import Empty from '@/components/empty'
  export default class MonthsIndex extends wepy.page {
    config = {
      navigationBarTitleText: '月账单'
    }

    data = {
      info: {},
      year: 0,
      month: 0,
      dashboard: {},
      expendChart: {},
      dayChart: {},
      weekChart: {},
      surplusChart: {},
      budgetChart: {},
      totalAsset: {},
      userinfo: {},
      lastTen: [],
      emptyTitle: '找不到相关数据呢，请多记账吧：）'
    }

    onLoad (options) {
      this.year = options.year
      this.month = options.month
      this.information()
      this.initDashboardChart()
      this.initExpendChart()
      this.initDayAvgChart()
      this.initWeekAvgChart()
      this.initSurplusChart()
      this.initBudgetChart()
      this.initAssetAllChart()
      this.initLast10()
      this.markRead(options.id)
    }

    async onShow () {
      this.info = await wepy.getSystemInfo()
    }

    async initDashboardChart () {
      const data = await wxRequest.Get('super_chart/month_chart', {
        type: 'dashboard_chart',
        year: this.year,
        month: this.month
      })
      this.dashboard = data
      this.$apply()
      if (data.data != null) {
        new wxCharts({
          canvasId: 'monthChart',
          type: 'pie',
          series: data.data,
          width: this.info.screenWidth,
          height: 280
        })
      }
    }

    async initExpendChart () {
      const data = await wxRequest.Get('super_chart/month_chart', {
        type: 'expend_compare',
        year: this.year,
        month: this.month
      })
      this.expendChart = data
      this.$apply()
      if (data.categories.length > 0) {
        new wxCharts({
          canvasId: 'expendChart',
          type: 'column',
          categories: data.categories,
          series: [{
              name: '上月',
              data: data.last_month
          }, {
              name: '当月',
              data: data.current_month
          }],
          yAxis: {
            format: function (val) {
              return val + '元';
            }
          },
          width: this.info.screenWidth,
          height: 200
        });
      }
    }

    async initDayAvgChart () {
      const data = await wxRequest.Get('super_chart/month_chart', {
        type: 'day_avg_chart',
        year: this.year,
        month: this.month
      })
      this.dayChart = data
      this.$apply()
      if (data.months.length > 0) {
        new wxCharts({
          canvasId: 'dayAvgChart',
          type: 'line',
          categories: data.months,
          series: [{
            name: '日均消费',
            data: data.data,
          }],
          yAxis: {
            title: '消费金额 (元)',
            min: 0
          },
          extra: {
            lineStyle: 'curve'
          },
          width: 320,
          height: 200
        });
      }
    }

    async initWeekAvgChart () {
      const data = await wxRequest.Get('super_chart/month_chart', {
        type: 'week_avg_chart',
        year: this.year,
        month: this.month
      })
      this.weekChart = data
      this.$apply()
      if (data.weeks.length > 0) {
        new wxCharts({
          canvasId: 'weekChart',
          type: 'line',
          categories: data.weeks,
          series: [{
            name: '每周消费',
            data: data.data,
          }],
          yAxis: {
            title: '消费金额 (元)',
            min: 0
          },
          extra: {
            lineStyle: 'curve'
          },
          width: 320,
          height: 200
        });
      }
    }

    async initSurplusChart () {
      const data = await wxRequest.Get('super_chart/month_chart', {
        type: 'month_surplus_chart',
        year: this.year,
        month: this.month
      })
      this.surplusChart = data
      this.$apply()
      if (data.months.length > 0) {
        new wxCharts({
          canvasId: 'surplusChart',
          type: 'line',
          categories: data.months,
          series: [{
            name: '月均消费',
            data: data.data
          }],
          yAxis: {
            title: '消费金额 (元)',
            min: 0
          },
          extra: {
            lineStyle: 'curve'
          },
          width: 320,
          height: 200
        });
      }
    }

    async initAssetAllChart () {
      const data = await wxRequest.Get('super_chart/month_chart', {
        type: 'asset_total_chart',
        year: this.year,
        month: this.month
      })
      this.totalAsset = data
      this.$apply()
      if (data.data != null) {
        new wxCharts({
          canvasId: 'assetAllChart',
          type: 'ring',
          series: data.data,
          yAxis: {
            title: '消费金额 (元)',
            min: 0
          },
          width: 320,
          height: 280,
          dataLabel: false
        });
      }
    }

    async initBudgetChart () {
      const data = await wxRequest.Get('super_chart/month_chart', {
        type: 'budget_chart',
        year: this.year,
        month: this.month
      })
      this.budgetChart = data
      this.$apply()
      if (data.categories.length > 0) {
        new wxCharts({
          canvasId: 'budgetChart',
          type: 'column',
          categories: data.categories,
          series: [{
              name: '预算',
              data: data.budget
          }, {
              name: '实际消费',
              data: data.amount
          }],
          yAxis: {
            format: function (val) {
              return val + '元';
            }
          },
          width: this.info.screenWidth,
          height: 200
        })
      }
    }

    async information () {
      const data = await wxRequest.Get('super_chart/month_chart', {
        type: 'information',
        year: this.year,
        month: this.month
      })
      this.userinfo = data
      this.$apply()
    }

    async initLast10 () {
      const data = await wxRequest.Get('super_chart/month_chart', {
        type: 'month_last_10',
        year: this.year,
        month: this.month
      })
      this.lastTen = data
      this.$apply()
    }

    async markRead(id) {
      await wxRequest.Get(`message/${id}`, {})
    }

    components = {
      StatementItem,
      Empty
    }
    
    computed = {
      expendPercent () {
        let data = this.dashboard.expend
        let total = this.dashboard.income*1 + this.dashboard.expend*1 + Math.abs(this.dashboard.surplus*1)
        if (total == 0 || data == 0) {
          return '10%';
        } else {
          return `${(data * 100 / total)}%`
        }
      },
      incomePercent () {
        let data = this.dashboard.income
        let total = this.dashboard.income*1 + this.dashboard.expend*1 + Math.abs(this.dashboard.surplus*1)
        if (total == 0 || data == 0) {
          return '10%';
        } else {
          return `${(data * 100 / total)}%`
        }
      },
      surplusPercent () {
        let data = Math.abs(this.dashboard.surplus*1)
        let total = this.dashboard.income*1 + this.dashboard.expend*1 + Math.abs(this.dashboard.surplus*1)
        if (total == 0 || data == 0) {
          return '10%';
        } else {
          return `${(data * 100 / total)}%`
        }
      },
      assetPercent () {
        let data = this.totalAsset.all_asset * 1
        let total = this.totalAsset.all_asset * 1 + this.totalAsset.net_worth * 1 + this.totalAsset.total_liability * 1
        if (total == 0 || data == 0) {
          return '10%';
        } else {
          return `${(data * 100 / total)}%`
        }
      },
      netPercent () {
        let data = this.totalAsset.net_worth * 1
        let total = this.totalAsset.all_asset * 1 + this.totalAsset.net_worth * 1 + this.totalAsset.total_liability * 1
        if (total == 0 || data == 0) {
          return '10%';
        } else {
          return `${(data * 100 / total)}%`
        }
      },
      debtPercent () {
        let data = this.totalAsset.total_liability * 1
        let total = this.totalAsset.all_asset * 1 + this.totalAsset.net_worth * 1 + this.totalAsset.total_liability * 1
        if (total == 0 || data == 0) {
          return '10%';
        } else {
          return `${(data * 100 / total)}%`
        }
      }
    }
  }
</script>
<style lang="scss" src="@/public/styles/months/index.scss"></style>
