<template lang="wxml">
  <view class="tab" wx:if="{{ !(type == 'transfer' && method == 'PUT') }}">
    <view class="{{ type == 'expend' ? 'active' : '' }}" @tap="choseTab('expend')">支出</view>
    <view class="{{ type == 'income' ? 'active' : '' }}" @tap="choseTab('income')">收入</view>
    <view class="{{ type == 'transfer' ? 'active' : '' }}" @tap="choseTab('transfer')">转账</view>
  </view>
  <form bindsubmit="formSubmit">
    <!-- 收入/支出 -->
    <view class="container" wx:if="{{type == 'expend' || type == 'income'}}">
      <view class="column money">
        <text>金额</text>
        <input class="money-input {{ type }}" placeholder="0.00" placeholder-class="{{ type }}" name="amount" type="digit" value="{{ amount }}"/>
      </view>

      <view class="column" @tap="redirectChoseCategory">
        <text>分类</text>
        <text type="digit">{{ category_name }}</text>
        <input hidden name="category_id" value="{{ category_id }}" type="number"/>
      </view>

      <view class="frequent-use" wx:if="{{ categories_label.length > 0 }}">
        <text>猜你想用：</text>
        <text class="label" wx:for="{{ categories_label }}" @tap="tabCategory({{item}})">{{ item.name }}</text>
      </view>

      <view class="column" @tap="redirectChoseAsset">
        <!-- 默认选中最常用的 -->
        <text>账户</text>
        <text>{{ asset_name }}</text>
        <input hidden name="asset_id" value="{{ asset_id }}" type="number"/>
      </view>

      <view class="frequent-use" wx:if="{{ assets_label.length > 0 }}">
        <text>猜你想用：</text>
        <text class="label" wx:for="{{ assets_label }}" @tap="tabAsset({{item}})">{{ item.name }}</text>
      </view>
      
      <view class="column">
        <text>日期</text>
        <picker mode="date" start="2017-01-01" bindchange="dateChange">
          <text>{{ date }}</text>
        </picker>
        <input hidden name="date" value="{{ date }}" type="number"/>
      </view>

      <view class="column location-column">
        <text style="flex: 1">地理位置</text>
        <view style="flex: 2">
          <input name="location" type="text" value="{{ address }}"/>
          <switch checked="{{ switchCheck }}" bindchange="getLocation"/>

          <input class="input-hidden" name="nation" value="{{ nation }}"/>
          <input class="input-hidden" name="province" value="{{ province }}"/>
          <input class="input-hidden" name="city" value="{{ city }}"/>
          <input class="input-hidden" name="district" value="{{ district }}"/>
          <input class="input-hidden" name="street" value="{{ street }}"/>
        </view>
      </view>
      
      <view class="column">
        <text>备注</text>
        <input class="remark" type="text" name="description"  value="{{ description }}" placeholder="本笔账单的简单说明"/>
      </view>

      <view class="zan-btns">
        <button class="zan-btn ljt-btn" disabled="{{ submiting }}" formType="submit" @tap="submit">保存</button>
      </view>
      <input hidden type="text" name="type" value="{{ type }}"/>
    </view>

    <!-- 转账 -->
    <view class="container" wx:if="{{ type == 'transfer' }}">
      <view class="column money">
        <text>金额</text>
        <input class="money-input expend" placeholder="0.00" placeholder-class="{{ type }}" name="amount" type="digit" value="{{ amount }}"/>
      </view>

      <view class="column transfer-type">
        <view @tap="assetFrom">{{ source }}</view>
        <image @tap="exchangeAsset" class="transfer-icon" src="/public/images/transfer.png"></image>
        <view @tap="assetTo">{{ target }}</view>
      </view>

      <view class="column">
        <text>日期</text>
        <picker mode="date" start="2017-01-01" bindchange="dateChange">
          <text>{{ date }}</text>
       </picker>
        <input hidden name="date" value="{{ date }}" type="number"/>
      </view>

      <view class="column">
        <text>备注</text>
        <input class="pull-right remark" type="text" name="description"  value="{{ description }}" placeholder="本笔账单的简单说明"/>
      </view>

      <view class="zan-btns">
        <button class="zan-btn ljt-btn" formType="submit" disabled="{{ submiting }}" @tap="submit">保存</button>
      </view>
    </view>

  </form>
</template>

<script>
	import wepy from 'wepy'
  import wxRequest from '@/utils/wxRequest'
  import { mapKey } from '@/utils/host'
  import Session from '@/utils/session'
  import tip from '@/utils/tip'
  import QQMapWX from '@/utils/qqmap-wx-jssdk.js'
  import { getStore } from 'wepy-redux'
  import { addStatement, modifyStatement } from '@/store/actions'
  export default class NewStatement extends wepy.page {
    config = {
      navigationBarTitleText: '记一笔'
    }

		data = {
      method: 'POST',
      statement_id: 0,
      type: 'expend',
      amount: '',
      category_id: 0,
      category_name: '请选择分类',
      asset_id: 0,
      asset_name: '请选择账户',
      description: '',
      date: '',
      address: '',
      assets_label: [],
      categories_label: [],
      // 转账信息
      asset_log_id: 0,
      source: '请选择账户',
      target: '请选择账户',
      from: 0,
      to: 0,
      transferType: 0,
      switchCheck: Session.get('getLocationSwitch') || false,
      qqmapSDK: null,
      nation: '',
      province: '',
      city: '',
      district: '',
      street: '',
      submiting: false
    }

    async onLoad(options) {
      const myDate = new Date()
      let year = myDate.getFullYear()
      let month = myDate.getMonth() + 1
      let day = myDate.getDate()
      if (month < 10) month = `0${month}`
      if (day < 10) day = `0${day}`
      this.date = [year, month, day].join('-')

      if (options.id != undefined) {
        this.getStatement(options.id)
      } else {
        // 获取上次使用的分类和账户
        this.getLastUsed()
      }

      if (this.switchCheck) {
        // 初始化地理位置信息
        this.setLocation()
      }

      if (options.type) {
        this.type = options.type
        this.from = options.asset_id
        this.source = options.source
      }

      this.guessCategory()
      this.guessAsset()
    }

    computed = {
      active () {
        return this.type == 'expend'
      }
    }

    methods = {
      async formSubmit (e) {
        let statement = e.detail.value
        statement.type = this.type
        if (statement.amount == 0 || statement.amount == '') {
          tip.error('金额不能为零')
          return false
        }

        if (statement.category_id == 0) {
          tip.error('未选择分类')
          return false
        }

        if (statement.asset_id == 0) {
          tip.error('未选择账户')
          return false
        }

        if (this.type == 'transfer') {
          if (this.from == 0 || this.to == 0) {
            tip.error('未选择转账分类')
            return false
          } else if (this.from == this.to) {
            tip.error('不能转去同一类型')
            return false
          }else {
            statement.from = this.from
            statement.to = this.to
          }
        }

        const localDate = new Date();
        statement.time = [localDate.getHours(), localDate.getMinutes(), localDate.getSeconds()].join(':')
        statement.asset_log_id = this.asset_log_id
        let result = null
        this.submiting = true
        if (this.method == 'POST') {
          result = await wxRequest.Post(`statements`, {statement: statement})
        } else {
          result = await wxRequest.Put(`statements/${this.statement_id}`, {statement: statement})
        }
        
        if (result.status == 200) {
          const store = getStore()
          store.dispatch(this.method == 'POST' ? addStatement(result.data) : modifyStatement(result.data))
          wepy.navigateBack({
            delta: 1
          })
        } else {
          tip.error(result.msg)
        }
        this.submiting = false
      },
      dateChange(e) {
        this.date = e.detail.value
      },
      choseTab (type) {
        if (this.type != type) {
          this.category_id = 0
          this.category_name = '请选择分类'
        }
        this.type = type
        this.guessCategory()
        this.guessAsset()
      },
      tabAsset (asset) {
        this.asset_id = asset.id
        this.asset_name = asset.name
      },
      tabCategory (category) {
        this.category_id = category.id
        this.category_name = category.name
      },
      assetFrom () {
        this.transferType = 1
        wx.navigateTo({ url: "/pages/statements/chose_asset" })
      },
      assetTo () {
        this.transferType = 2
        wx.navigateTo({ url: "/pages/statements/chose_asset" })
      },
      exchangeAsset () {
        let tmp1 = this.source
        this.source = this.target
        this.target = tmp1

        let tmp2 = this.from
        this.from = this.to
        this.to = tmp2
      },
      redirectChoseAsset () {
        wx.navigateTo({ url: "/pages/statements/chose_asset" })
      },
      redirectChoseCategory () {
        wx.navigateTo({ url: `/pages/statements/chose_category?type=${this.type}` })
      },
      getLocation (e) {
        let locationSwitch = e.detail.value
        Session.set('getLocationSwitch', locationSwitch)
        if(locationSwitch) {
          this.setLocation()
        } else {
          // 关闭获取地理位置
          this.address = ''
          this.$apply()
        }
      }
    }

    async getStatement (id) {
      const statement = await wxRequest.Get(`statements/${id}`)
      if (statement.status != undefined && statement.status != 200) {
        wepy.navigateBack({
          delta: 1
        })
        tip.error('无效的账单')
      }
      
      if (statement.type == 'transfer') {
        this.from = statement.asset_id
        this.to = statement.target_asset_id
        this.source = statement.asset_name
        this.target = statement.target_asset_name
      }

      this.method = 'PUT'
      this.statement_id = statement.id
      this.type = statement.type
      this.amount = statement.amount
      this.category_id = statement.category_id
      this.asset_id = statement.asset_id
      this.description = statement.description
      this.date = statement.date
      this.category_name = statement.category_name
      this.asset_name = statement.asset_name
      this.$apply()
    }

    async getLastUsed() {
      const result = await wxRequest.Get('statements/frequent_used', { type: this.type })
      this.category_id = result.category_id
      this.asset_id = result.asset_id
      this.category_name = result.category_name
      this.asset_name = result.asset_name
      this.$apply()
    }

    async guessCategory () {
      const data = await wxRequest.Get('statements/category_frequent', { type: this.type })
      this.categories_label = data
      this.$apply()
    }

    async guessAsset () {
      const data = await wxRequest.Get('statements/asset_frequent', { type: this.type })
      this.assets_label = data
      this.$apply()
    }

    setLocation () {
      this.qqmapSDK = new QQMapWX({
        key: mapKey
      });
      try {
        console.log('start get location')
        wx.getLocation({
          type: 'gcj02', //返回可以用于wx.openLocation的经纬度
          success: (result) => {
            console.log('location: ', result)
            this.qqmapSDK.reverseGeocoder({
              location: {
                latitude: result.latitude,
                longitude: result.longitude
              },
              success: (addressRes) => {
                let address_component = addressRes.result.address_component
                console.log(address_component)
                this.nation = address_component.nation
                this.province = address_component.province
                this.city = address_component.city
                this.district = address_component.district
                this.street = address_component.street
                this.address = addressRes.result.address
                this.$apply()
              }
            })
          }
        })
      } catch (e) {
        console.log('errorMsg', e)
        Session.set('getLocationSwitch', false)
        this.switchCheck = false
        this.$apply()
      }
    }

    setCategory (category) {
      this.category_id = category.id
      this.category_name = category.name
    }

    setAsset (asset) {
      if (this.type != 'transfer') {
        this.asset_id = asset.id
        this.asset_name = asset.name
      } else {
        if (this.transferType == 1) {
          this.source = asset.name
          this.from = asset.id
        } else {
          this.target = asset.name
          this.to = asset.id
        }
      }
    }

  }
</script>
<style lang="scss" src="../../public/styles/statement/statement.scss"></style>