<!--首页-->
<template>
  <view class="container">
    <!-- <view class="statement-category">
      生活账本
    </view> -->
    <view class="header">
      <image class="bg" src="{{ header.bg_avatar }}"></image>
      <view class="level-2">
        <view class="fs14">
          <text>{{ header.position_1_human_name }}</text>
        </view>
        <view class="fs21 today-expend">{{ header.position_1_amount }}</view>
        <view class="overflow-hide">
          <view class="pull-left fs14">{{ header.position_2_human_name }} {{ header.position_2_amount }}</view>
          <view class="pull-right fs14">{{ header.position_3_human_name }} {{ header.position_3_amount }}</view>
        </view>
      </view>

      <i-notice-bar icon="systemprompt" wx:if="{{ header.show_notice_bar }}">
        <navigator wx:if="{{ header.notice_bar_path }}" url="{{ header.notice_bar_path }}">
          <text>{{ header.notice_text }}</text>
        </navigator>
        <text wx:else>{{ header.notice_text }}</text>
      </i-notice-bar>
    </view>

    <view class="budget-setting">
      <view class="budget__cur-month">
        <view class="text-grey">本月预算目标</view>
        <view class="text-grey" bindtap="onClickBudget">
          <i class="iconfont jz-icon-edit"></i>
          <text>调整</text>
        </view>
      </view>
      <view class="budget-progress">
        <view class="budget-progress__bg"></view>
        <view
          class="budget-progress__item"
          style="width: {{ budgetHeader.percentage }}%;background-color: {{ budgetHeader.color }}">
        </view>
      </view>
      <view class="budget__cur-amount">
        <view>预算目标 {{ budgetHeader.budget }}</view>
        <view>已消费 {{ budgetHeader.month_expend }}</view>
      </view>
    </view>

    <view class="zan-btns new-record">
      <navigator url="/pages/statements/create">
        <button class="zan-btn jz-btn btn-shadow">记一笔</button>
      </navigator>
    </view>

    <view class="statements">
      <view class="statement-title">今日消费</view>
      <view class="statement-list" wx-if="{{ list.length > 0 }}">
        <repeat for="{{ list }}" key="index" index="index" item="item">
          <StatementItem :statement.sync="item"></StatementItem>
        </repeat>
      </view>

      <view wx:if="{{ list.length == 0 }}">
        <empty :title.sync="emptyTitle"></empty>
      </view>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import wxRequest from '@/utils/wxRequest'
  import Session from '@/utils/session'
  import Empty from '@/components/empty'
  import StatementItem from '@/components/index/statement'
  import { getStore } from 'wepy-redux'
  import { asyncList } from '@/store/actions'
  import Tip from '@/utils/tip'
  export default class Index extends wepy.page {
    config = {
      navigationBarTitleText: '首页',
      "usingComponents": {
        "i-notice-bar": "../public/iview/notice-bar/index"
      }
    }

    data = {
      emptyTitle: '今天还没有记账噢~',
      list: [],
      header: {},
      budgetHeader: {
        budget: "0.00",
        month_expend: "0.00",
        percentage: "0"
      }
    }

    components = {
      empty: Empty,
      orderEmpty: Empty,
      StatementItem
    }

    methods = {
      onClickBudget() {
        wepy.navigateTo({
          url: `/pages/budgets/budget`
        })
      }
    }

    onShow () {
      this.getHeader()
      this.getList()
      this.getBudget()
    }

    async getHeader () {
      if (Session.get('header_load_cache')) {
        this.header = Session.get('header_load_cache')
        this.$apply()
      }

      const data = await wxRequest.Get('header')
      if (data === undefined) {
        return false
      }

      this.header = data
      Session.set('header_load_cache', this.header)
      this.$apply()
    }

    async getBudget() {
      if (Session.get('header_budget_cache')) {
        this.budgetHeader = Session.get('header_budget_cache')
        this.$apply()
      }

      const data = await wxRequest.Get('idx_budget')
      this.budgetHeader = data
      // 不同预算显示不同的颜色
      if (Number.parseInt(this.budgetHeader.percentage) > 90) {
        this.budgetHeader.color = '#FF2929'
      } else if (Number.parseInt(this.budgetHeader.percentage) > 50) {
        this.budgetHeader.color = '#F7B500'
      } else {
        this.budgetHeader.color = '#40BE30'
      }
      Session.set('header_budget_cache', this.budgetHeader)
      this.$apply()
    }

    async getList() {
      if (Session.get('index_load_cache')) {
        this.list = Session.get('index_load_cache')
        this.$apply()
      }

      const store = getStore()
      const result = await store.dispatch(asyncList())
      if (typeof result.payload === 'undefined') {
        Tip.error("可能由于网络问题，获取列表失败", 2300)
        return false
      }
      const res = store.getState().statement.statements
      this.list = res
      Session.set('index_load_cache', res)
      this.$apply()
    }

    computed = {
      showEmpty () {
        return this.list.length <= 0
      }
    }
  }
</script>
<style lang="scss" src="@/public/styles/index.scss"></style>
